{
  "Name": "Hash",
  "Implements": [
    "hash"
  ],
  "Specification": {
    "Type": "CustomClass",
    "Contents": "	/// <summary>\n   /// @CSharpLua.Template = \"hash({0})\"\n   /// </summary>\n   public static implicit operator Hash(string v)\n   {\n      //Doesn't actually get called.  Instead the template is injected.  But we can't extern operators.\n      return Defold.hash(v);\n   }\n\n\n   /// <summary>\n   /// @CSharpLua.Template = \"{0}\"\n   /// </summary>\n   public static implicit operator string(Hash v)\n   {\n      //Doesn't actually get called.  Instead the template is injected.  But we can't extern operators.\n      return v.ToString();\n   }\n\n\n\n   /// <summary>\n   /// @CSharpLua.Template = \"{this}\"\n   /// </summary>\n   public extern override string ToString();\n}\n\n\n\n/// <summary>\n/// //Used so we can fool the C# compiler into allowing us more overrides.  Hash is the actual implementation and should be\n/// used in methods where possible.\n/// </summary>\npublic class __Hash2\n{\n	/// <summary>\n   /// @CSharpLua.Ignore\n   /// </summary>\n   public static implicit operator __Hash2(Hash v)\n   {\n      //Doesn't actually get called.  Instead the template is injected.  But we can't extern operators.\n      return (dynamic)null;\n   }\n   \n\n   /// <summary>\n   /// @CSharpLua.Template = \"hash({0})\"\n   /// </summary>\n   public static implicit operator __Hash2(string v)\n   {\n      //Doesn't actually get called.  Instead the template is injected.  But we can't extern operators.\n      return Defold.hash(v);\n   }\n\n   /// <summary>\n   /// @CSharpLua.Template = \"{this}\"\n   /// </summary>\n   public Hash ToHash()\n   {\n      return (dynamic)null; //Not actually called.  \n   }\n}  \n\n\n/// <summary>\n/// //Used so we can fool the C# compiler into allowing us more overrides.  Hash is the actual implementation and should be\n/// used in methods where possible.\n/// </summary>\npublic class __Hash3\n{\n	/// <summary>\n   /// @CSharpLua.Ignore\n   /// </summary>\n   public static implicit operator __Hash3(Hash v)\n   {\n      //Doesn't actually get called.  Instead the template is injected.  But we can't extern operators.\n      return (dynamic)null;\n   }\n\n\n   /// <summary>\n   /// @CSharpLua.Template = \"hash({0})\"\n   /// </summary>\n   public static implicit operator __Hash3(string v)\n   {\n      //Doesn't actually get called.  Instead the template is injected.  But we can't extern operators.\n      return Defold.hash(v);\n   }\n\n   /// <summary>\n   /// @CSharpLua.Template = \"{this}\"\n   /// </summary>\n   public Hash ToHash()\n   {\n      return (dynamic)null; //Not actually called.  \n   }"
  },
  "Handling": {
    "Handling": "None"
  }
}