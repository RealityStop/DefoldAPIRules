{
	"Name": "Quaternion",
	"Implements": [
		"quat",
		"quaternion"
	],
	"Specification": {
		"Type": "CustomClass",
		"Custom" : "public class Quaternion : ILuaType",
		"Contents": "private float x, y, z, w;\n\n/// <summary>\n/// @CSharpLua.Template = \"vmath.quat()\"\n/// </summary>\npublic extern Quaternion();\n/// <summary>\n/// @CSharpLua.Template = \"vmath.quat({0})\"\n/// </summary>\npublic extern Quaternion(Quaternion q);\n/// <summary>\n/// @CSharpLua.Template = \"vmath.quat({0},{1},{2},{3})\"\n/// </summary>\npublic extern Quaternion(float x, float y, float z, float w);\n\n\n/// <summary>\n/// @CSharpLua.Template = \"vmath.quat_axis_angle({0},{1})\"\n/// </summary>\npublic static extern Quaternion From_axis_angle(vector3 v, float angle);\n\n/// <summary>\n/// @CSharpLua.Template = \"vmath.quat_basis({0},{1},{2})\"\n/// </summary>\npublic static extern Quaternion From_basis(vector3 x, vector3 y, vector3 z);\n\n/// <summary>\n/// @CSharpLua.Template = \"vmath.quat_from_to({0},{1})\"\n/// </summary>\npublic static extern Quaternion From_to(vector3 v1, vector3 v2);\n\n/// <summary>\n/// @CSharpLua.Template = \"vmath.quat_rotation_x({0})\"\n/// </summary>\npublic static extern Quaternion Rotation_x(float angle);\n            \n/// <summary>\n/// @CSharpLua.Template = \"vmath.quat_rotation_y({0})\"\n/// </summary>\npublic static extern Quaternion Rotation_y(float angle);\n            \n/// <summary>\n/// @CSharpLua.Template = \"vmath.quat_rotation_z({0})\"\n/// </summary>\npublic static extern Quaternion Rotation_z(float angle);\n\n\n/// <summary>\n/// @CSharpLua.Template = \"vmath.rotate({this},{0})\"\n/// </summary>\npublic extern vector3 RotateVector(vector3 v);\n\n\n\n\n/// <summary>\n/// @CSharpLua.Template = \"{0} * {1}\"\n/// </summary>\npublic static extern Quaternion operator *(Quaternion a, Quaternion b);"
	},
	"Handling": {
		"Handling": "Ignore"
	}
}