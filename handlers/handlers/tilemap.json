{
  "namespace": "tilemap",
  "BaseClass": "BuiltInComponentBase",
  "CustomContent": "\n\n\n\n//Cacheables\nprivate Rect _cachedBounds;\n\n/// <summary>\n/// Gets the bounds for the tilemap.  \n/// </summary>\n/// <returns></returns>\npublic Rect Bounds\n{\n   get\n   {\n      if (IsCachingEnabled)\n         if (_cachedBounds != null)\n            return _cachedBounds;\n\n\n      var x = get_bounds(this, out var y, out var w, out var h);\n      var returnVal = new Rect(x, y, w, h);\n\n      if (IsCachingEnabled)\n         _cachedBounds = returnVal;\n\n      return returnVal;\n   }\n}\n\n\n\npublic int GetTile(int x, int y, string layer)\n{\n   return (int)get_tile(this, layer, x, y);\n}\n   \npublic int GetTile(int x, int y, Hash layer)\n{\n   return (int)get_tile(this, layer, x, y);\n}\n\n\npublic void SetTile(int x, int y, int tile, string layer)\n{\n   ValidateCachedBounds(x, y);\n   set_tile(this, layer, x, y, tile);\n}\npublic void SetTile(int x, int y, int tile, string layer, TilemapTransforms transformBitmask)\n{\n   ValidateCachedBounds(x, y);\n   set_tile(this, layer, x, y, tile, (int)transformBitmask);\n}\n   \npublic void SetTile(int x, int y, int tile, Hash layer)\n{\n   ValidateCachedBounds(x, y);\n   set_tile(this, layer, x, y, tile);\n}\npublic void SetTile(int x, int y, int tile, Hash layer, TilemapTransforms transformBitmask)\n{\n   ValidateCachedBounds(x, y);\n   set_tile(this, layer, x, y, tile, (int)transformBitmask);\n}\n   \n\nprivate void ValidateCachedBounds(int x, int y)\n{\n   if (IsCachingEnabled)\n      if (_cachedBounds != null)\n      {\n         //If we're setting a tile outside the cached boundaries,\n         //clear the cache so the next request will re-fetch.\n         if (!_cachedBounds.InRect(x, y))\n            _cachedBounds = null;\n      }\n}\n   \n   \n   \n\npublic void SetLayerVisible(string layer, bool visible = true)\n{\n   set_visible(this, layer, visible);\n}\n   \npublic void SetLayerVisible(Hash layer, bool visible = true)\n{\n   set_visible(this, layer, visible);\n}"
}