{
  "namespace": "tilemap",
  "BaseClass": "BuiltInComponentBase",
  "CustomContent": "\n\n/// <summary>\n///     Gets the bounds for the tilemap.  Allocates memory, so use sparingly.\n/// </summary>\n/// <returns></returns>\npublic Rect Bounds\n{\n   get\n   {\n      var x = get_bounds(this, out var y, out var w, out var h);\n      var returnVal = new Rect(x, y, w, h);\n      return returnVal;\n   }\n}\n\n\n/// <summary>\n/// Fetches the bounds without allocating memory\n/// </summary>\n/// <param name=\"x\"></param>\n/// <param name=\"y\"></param>\n/// <param name=\"width\"></param>\n/// <param name=\"height\"></param>\npublic void GetBounds(out double x, out double y, out double width, out double height)\n{\n   x = get_bounds(this, out y, out width, out height);\n}\n\n\npublic int GetTile(int x, int y, string layer)\n{\n   return (int)get_tile(this, layer, x, y);\n}\n\n\npublic int GetTile(int x, int y, Hash layer)\n{\n   return (int)get_tile(this, layer, x, y);\n}\n\n\npublic void SetTile(int x, int y, int tile, string layer)\n{\n   set_tile(this, layer, x, y, tile);\n}\n\n\npublic void SetTile(int x, int y, int tile, string layer, TilemapTransforms transformBitmask)\n{\n   set_tile(this, layer, x, y, tile, (int)transformBitmask);\n}\n\n\npublic void SetTile(int x, int y, int tile, Hash layer)\n{\n   set_tile(this, layer, x, y, tile);\n}\n\n\npublic void SetTile(int x, int y, int tile, Hash layer, TilemapTransforms transformBitmask)\n{\n   set_tile(this, layer, x, y, tile, (int)transformBitmask);\n}\n\n\npublic void SetLayerVisible(string layer, bool visible = true)\n{\n   set_visible(this, layer, visible);\n}\n\n\npublic void SetLayerVisible(Hash layer, bool visible = true)\n{\n   set_visible(this, layer, visible);\n}"
}